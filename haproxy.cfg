# config based on the original haproxy.cfg which comes with the rpm
global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# frontend http port 80
frontend http_in
    mode http
    option httplog
    bind 10.46.41.61:80
    option forwardfor
    use_backend http-cluster-0 if { hdr_end(host) -i .apps.helios04-0.cnv.example.com }

# frontend https port 443
frontend https_in
    mode tcp
    option tcplog
    bind 10.46.41.61:443
    acl tls req.ssl_hello_type 1
    tcp-request inspect-delay 5s
    tcp-request content accept if tls
    use_backend https-cluster-0 if { req.ssl_sni -m end .apps.helios04-0.cnv.example.com }

# frontend https port 6443
frontend api_in
    mode tcp
    option tcplog
    bind 10.46.41.61:6443
    acl tls req.ssl_hello_type 1
    tcp-request inspect-delay 5s
    tcp-request content accept if tls
    use_backend api-cluster-0 if { req.ssl_sni -i api.helios04-0.cnv.example.com }

# === start cluster-0

# cluster-0 / http
backend http-cluster-0
    mode http
    option httplog
    option forwardfor
    server http-0 192.168.123.10:80

# cluster-0 / https
backend https-cluster-0
    mode tcp
    option tcplog
    server https-0 192.168.123.10:443

# cluster-0 / api
backend api-cluster-0
    mode tcp
    option tcplog
    server api-0 192.168.123.5:6443

# ==== end cluster-0
